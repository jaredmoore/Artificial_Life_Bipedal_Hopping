library(plyr)
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_analysis/"#
#
# Read in the data from the file.#
all_data <- read.csv("/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/all_best_individuals_unified_data.dat",header=TRUE,sep=",")#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3.0#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$Torso_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass#
all_data$Mass_Ratio <- all_data$Tail_Mass/all_data$Total_Mass#
all_data$Tail_Mass_TBM <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
summary(all_data)#
#
# Rescale the Mass_Dist to 0 - 1.  Possible values initially are 0.33-1.0#
newrange <- function(x){(x-0.25)/(1.0-0.25)}#
min(all_data$Mass_Dist)#
max(all_data$Mass_Dist)#
all_data$Scaled_Mass_Dist <- newrange(all_data$Mass_Dist)#
min(all_data$Scaled_Mass_Dist)#
max(all_data$Scaled_Mass_Dist)#
#
# Change the order of experiment factor levels.#
all_data$Exp <- factor(all_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","9.25% TBMC","16.93% TBM","16.93% TBMC","23.41% TBM","23.41% TBMC","37.94% TBM"))#
all_data$Exp_Labels <- revalue(all_data$Experiment, c("0.075 Mass"="FM-2.5%","0.15 Mass"="FM-4.9%","0.3 Mass"="FM-9.3%",#
	"0.3 Mass Curved"="FM-0.3C","0.6 Mass"="FM-17%","0.6 Mass Curved"="FM-0.6C","0.9 Mass"="FM-23.5%","0.9 Mass Curved"="FM-0.9C","1.8 Mass"="FM-38.1%"))#
all_data <- subset(all_data, Exp %in% c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
bipedal_hopper_data$Exp <- factor(bipedal_hopper_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM","9.25% TBMC","16.93% TBMC","23.41% TBMC"))#
#
levels(all_data$Exp)#
#
# Rename experiments from TBM to Mass#
legend_limits=c("0.075 Mass","0.15 Mass","0.3 Mass","0.6 Mass","0.9 Mass","1.8 Mass")#
legend_labels=c("FM-2.5%","FM-4.9%","FM-9.3%","FM-17%","FM-23.5%","FM-38.1%")
give.n <- function(x){#
  return(c(y = (max(x)+min(x))/2.0, label = length(x))) #
  # experiment with the multiplier to find the perfect position#
}#
#
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Exp_Labels,y=Dist_Traveled,fill=Behavior)) +#
	labs(title="Behavior versus Distance Traveled",x="Experiment",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	ylim(min=0, max=95) +#
#	geom_boxplot() +#
	geom_point(aes(color=Behavior,shape=Behavior),size=4) +#
#	geom_jitter(aes(color=Behavior)) +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2])) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2])) #+#
#	scale_shape_discrete(limits=Exp_Labels,labels=legend_labels)+#+	#
#	stat_summary(fun.data = give.n, geom = "text", position=position_dodge(width=0.85))#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
source("~/.Rprofile")
give.n <- function(x){#
  return(c(y = (max(x)+min(x))/2.0, label = length(x))) #
  # experiment with the multiplier to find the perfect position#
}#
#
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Exp_Labels,y=Dist_Traveled,fill=Behavior)) +#
	labs(title="Behavior versus Distance Traveled",x="Experiment",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	ylim(min=0, max=95) +#
#	geom_boxplot() +#
	geom_point(aes(color=Behavior,shape=Behavior),size=4) +#
#	geom_jitter(aes(color=Behavior)) +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2])) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2])) #+#
#	scale_shape_discrete(limits=Exp_Labels,labels=legend_labels)+#+	#
#	stat_summary(fun.data = give.n, geom = "text", position=position_dodge(width=0.85))#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373
all_data <- read.csv("/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/all_best_individuals_unified_data.dat",header=TRUE,sep=",")#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3.0#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$Torso_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass#
all_data$Mass_Ratio <- all_data$Tail_Mass/all_data$Total_Mass#
all_data$Tail_Mass_TBM <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
#
# Rescale the Mass_Dist to 0 - 1.  Possible values initially are 0.33-1.0#
newrange <- function(x){(x-0.25)/(1.0-0.25)}#
min(all_data$Mass_Dist)#
max(all_data$Mass_Dist)#
all_data$Scaled_Mass_Dist <- newrange(all_data$Mass_Dist)#
min(all_data$Scaled_Mass_Dist)#
max(all_data$Scaled_Mass_Dist)#
#
# Change the order of experiment factor levels.#
all_data$Exp <- factor(all_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","9.25% TBMC","16.93% TBM","16.93% TBMC","23.41% TBM","23.41% TBMC","37.94% TBM"))#
all_data$Exp_Labels <- revalue(all_data$Experiment, c("0.075 Mass"="FM-2.5%","0.15 Mass"="FM-4.9%","0.3 Mass"="FM-9.3%",#
	"0.3 Mass Curved"="FM-0.3C","0.6 Mass"="FM-17%","0.6 Mass Curved"="FM-0.6C","0.9 Mass"="FM-23.5%","0.9 Mass Curved"="FM-0.9C","1.8 Mass"="FM-38.1%"))#
all_data <- subset(all_data, Exp %in% c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
bipedal_hopper_data$Exp <- factor(bipedal_hopper_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM","9.25% TBMC","16.93% TBMC","23.41% TBMC"))#
#
levels(all_data$Exp)#
#
# Rename experiments from TBM to Mass#
legend_limits=c("0.075 Mass","0.15 Mass","0.3 Mass","0.6 Mass","0.9 Mass","1.8 Mass")#
legend_labels=c("FM-2.5%","FM-4.9%","FM-9.3%","FM-17%","FM-23.5%","FM-38.1%")
give.n <- function(x){#
  return(c(y = (max(x)+min(x))/2.0, label = length(x))) #
  # experiment with the multiplier to find the perfect position#
}#
#
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Exp_Labels,y=Dist_Traveled,fill=Behavior)) +#
	labs(title="Behavior versus Distance Traveled",x="Experiment",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	ylim(min=0, max=95) +#
#	geom_boxplot() +#
	geom_point(aes(color=Behavior,shape=Behavior),size=4) +#
#	geom_jitter(aes(color=Behavior)) +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2])) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2])) #+#
#	scale_shape_discrete(limits=Exp_Labels,labels=legend_labels)+#+	#
#	stat_summary(fun.data = give.n, geom = "text", position=position_dodge(width=0.85))#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
all_data <- read.csv("/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/all_best_individuals_unified_data.dat",header=TRUE,sep=",")#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3.0#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$Torso_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass#
all_data$Mass_Ratio <- all_data$Tail_Mass/all_data$Total_Mass#
all_data$Tail_Mass_TBM <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Scaled_Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
#
# Rescale the Mass_Dist to 0 - 1.  Possible values initially are 0.33-1.0#
newrange <- function(x){(x-0.25)/(1.0-0.25)}#
min(all_data$Mass_Dist)#
max(all_data$Mass_Dist)#
all_data$Scaled_Mass_Dist <- newrange(all_data$Mass_Dist)#
min(all_data$Scaled_Mass_Dist)#
max(all_data$Scaled_Mass_Dist)#
#
# Change the order of experiment factor levels.#
all_data$Exp <- factor(all_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","9.25% TBMC","16.93% TBM","16.93% TBMC","23.41% TBM","23.41% TBMC","37.94% TBM"))#
all_data$Exp_Labels <- revalue(all_data$Experiment, c("0.075 Mass"="FM-2.5%","0.15 Mass"="FM-4.9%","0.3 Mass"="FM-9.3%",#
	"0.3 Mass Curved"="FM-0.3C","0.6 Mass"="FM-17%","0.6 Mass Curved"="FM-0.6C","0.9 Mass"="FM-23.5%","0.9 Mass Curved"="FM-0.9C","1.8 Mass"="FM-38.1%"))#
all_data <- subset(all_data, Exp %in% c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
bipedal_hopper_data$Exp <- factor(bipedal_hopper_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM","9.25% TBMC","16.93% TBMC","23.41% TBMC"))#
#
levels(all_data$Exp)#
#
# Rename experiments from TBM to Mass#
legend_limits=c("0.075 Mass","0.15 Mass","0.3 Mass","0.6 Mass","0.9 Mass","1.8 Mass")#
legend_labels=c("FM-2.5%","FM-4.9%","FM-9.3%","FM-17%","FM-23.5%","FM-38.1%")
give.n <- function(x){#
  return(c(y = (max(x)+min(x))/2.0, label = length(x))) #
  # experiment with the multiplier to find the perfect position#
}#
#
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Exp_Labels,y=Dist_Traveled,fill=Behavior)) +#
	labs(title="Behavior versus Distance Traveled",x="Experiment",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	ylim(min=0, max=95) +#
#	geom_boxplot() +#
	geom_point(aes(color=Behavior,shape=Behavior),size=4) +#
#	geom_jitter(aes(color=Behavior)) +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2])) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2])) #+#
#	scale_shape_discrete(limits=Exp_Labels,labels=legend_labels)+#+	#
#	stat_summary(fun.data = give.n, geom = "text", position=position_dodge(width=0.85))#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
library(plyr)#
#
# Constants for writing out data.#
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_analysis/"#
#
# Read in the data from the file.#
all_data <- read.csv("/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/all_best_individuals_unified_data.dat",header=TRUE,sep=",")#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3.0#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$Torso_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass#
all_data$Mass_Ratio <- all_data$Tail_Mass/all_data$Total_Mass#
all_data$Tail_Mass_TBM <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
#
# Rescale the Mass_Dist to 0 - 1.  Possible values initially are 0.33-1.0#
newrange <- function(x){(x-0.25)/(1.0-0.25)}#
min(all_data$Mass_Dist)#
max(all_data$Mass_Dist)#
all_data$Scaled_Mass_Dist <- newrange(all_data$Mass_Dist)#
min(all_data$Scaled_Mass_Dist)#
max(all_data$Scaled_Mass_Dist)#
#
# Change the order of experiment factor levels.#
all_data$Exp <- factor(all_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","9.25% TBMC","16.93% TBM","16.93% TBMC","23.41% TBM","23.41% TBMC","37.94% TBM"))#
all_data$Exp_Labels <- revalue(all_data$Experiment, c("0.075 Mass"="FM-2.5%","0.15 Mass"="FM-4.9%","0.3 Mass"="FM-9.3%",#
	"0.3 Mass Curved"="FM-0.3C","0.6 Mass"="FM-17%","0.6 Mass Curved"="FM-0.6C","0.9 Mass"="FM-23.5%","0.9 Mass Curved"="FM-0.9C","1.8 Mass"="FM-38.1%"))#
all_data <- subset(all_data, Exp %in% c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
bipedal_hopper_data$Exp <- factor(bipedal_hopper_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM","9.25% TBMC","16.93% TBMC","23.41% TBMC"))#
#
levels(all_data$Exp)#
#
# Rename experiments from TBM to Mass#
legend_limits=c("0.075 Mass","0.15 Mass","0.3 Mass","0.6 Mass","0.9 Mass","1.8 Mass")#
legend_labels=c("FM-0.075","FM-0.15","FM-0.3","FM-0.6","FM-0.9","FM-1.8")
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"), #
	aes(x=Tail_Mass_TBM,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled  (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
legend_labels_2=c("FM-2.5%","FM-4.9%","FM-9.3%","FM-17%","FM-23.5%","FM-38.1%")
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"), #
	aes(x=Tail_Mass_TBM,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled  (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels_2,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plot.title = element_text(hjust = 0.5)
plt
source("~/.Rprofile")
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"), #
	aes(x=Tail_Mass_TBM,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled  (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels_2,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
source("~/.Rprofile")
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"), #
	aes(x=Tail_Mass_TBM,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled  (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels_2,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"tail_mass_tbm_vs_dist_traveled",plt)
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Total_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Torso Mass versus Distance Traveled",x="Torso Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	xlim(min=0, max=4.0) +#
		geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits_2,labels=legend_labels,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Total_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Torso Mass versus Distance Traveled",x="Torso Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	xlim(min=0, max=4.0) +#
		geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels_2,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"torso_mass_vs_dist_traveled",plt)
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_evo_tail_analysis/"#
#
base_path <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/"#
#
exp_num <- 2#
experiments <- c("evo_tail_evo_mass_straight_actuated_tail_4000_gens",#
	"evo_tail_evo_mass_straight_actuated_tail_low_lim_0_15")#
exp_name <- c("Evo Len/Mass",#
	"Evo Len/Mass Low Lim 0.015")#
#
all_data <- data.frame()#
#
for (i in 1:2) {#
	# Read in the data from the file.#
	fit_data <- read.csv(paste(base_path,experiments[i],"/best_individuals_fit_data.dat",sep=""),header=TRUE,sep=",")#
	behavior_data <- read.csv(paste(base_path,"experiment_overview_best_individuals_evo_mass_evo_length.csv",sep=""),header=TRUE,sep=",")#
	behavior_data <- subset(behavior_data, Exp == exp_name[i])#
	tmp_data <- merge(fit_data, behavior_data)#
	all_data <- rbind(all_data, tmp_data)#
}#
#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$TBM_Tail_Mass <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Tail_Mass_Dist <- ((all_data$TS3_Mass/all_data$Tail_Mass)*1.0 + (all_data$TS2_Mass/all_data$Tail_Mass)*2.0 + (all_data$TS1_Mass/all_data$Tail_Mass)*3.0)/3.0#
avg_tail_mass <- all_data$Tail_Mass/3.0#
all_data$Tail_Var <- ((all_data$TS1_Mass - avg_tail_mass)**2 + (all_data$TS2_Mass - avg_tail_mass)**2 + (all_data$TS3_Mass - avg_tail_mass)**2)/3#
abs(all_data$TS1_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS2_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS3_Mass - (all_data$Tail_Mass/3.0))#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
# Fix treatment names for plotting.#
all_data$Exp <- revalue(all_data$Exp, c("Evo Len/Mass"="ELM-3%", "Evo Len/Mass Low Lim 0.015"="ELM-13.3%"))#
#
########################################################################################################################
# Plot the performance of the individuals separated by behavior and grouped by experiment.#
plt <- ggplot(all_data,aes(x=Exp,y=Dist_Traveled,fill=Behavior)) +#
	labs(title="Behavior versus Distance Traveled",x="Experiment",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	ylim(min=0, max=90) +#
	geom_boxplot() #+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=TBM_Tail_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Body Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=95) +#
	xlim(min=0, max=0.25) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=TBM_Tail_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Body Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=0.25) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=TBM_Tail_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=0.25) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"tbm_tail_mass_vs_dist_traveled",plt)
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Tail_Len,y=Dist_Traveled,shape=Exp,color=Behavior,fill=Behavior)) +#
	labs(title="Tail Length versus Distance Traveled",x="Tail Length",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=2.55) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#
	#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
all_data$Tail_Len <- (all_data$TS1_Len * 3)/1.373
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Tail_Len,y=Dist_Traveled,shape=Exp,color=Behavior,fill=Behavior)) +#
	labs(title="Tail Length versus Distance Traveled",x="Tail Length",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=2.55) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#
	#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Tail_Len,y=Dist_Traveled,shape=Exp,color=Behavior,fill=Behavior)) +#
	labs(title="Tail Length versus Distance Traveled",x="Tail Length (Body Lengths)",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=2) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#
	#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"tail_len_vs_dist_traveled",plt)
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Mass_Dist,y=Tail_Mass_Dist,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Torso versus Tail Mass Distribution",x="Torso Mass Dist (O Rear, 1 Fore)",y="Tail Mass Dist (0 Rear, 1 Fore)") +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6)), shape = guide_legend(override.aes = list(size=3))) +#
	xlim(min=0,max=1) +#
	ylim(min=0,max=1) +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	geom_point(aes(size=Dist_Traveled)) +#
	scale_size_continuous(guide=FALSE) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"torso_vs_tail_mass_dist",plt)
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Tail_Len,y=Tail_Mass_Dist,shape=Exp,color=Behavior,fill=Behavior)) +#
	labs(title="Tail Length versus Tail Mass Distribution",x="Tail Length (Body Lengths)",y="Tail Mass Dist(0 - Rear, 1 - Fore)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6)), shape = guide_legend(override.aes = list(size=3))) +#
	ylim(min=0, max=1.0) +#
	xlim(min=0, max=2) +	#
	geom_point(aes(size=Dist_Traveled)) +#
	scale_size_continuous(guide=FALSE) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"tail_len_vs_tail_mass_dist",plt)
save_plot <- function(filepath,filename,data_plot) {#
	png(paste(filepath,filename,".png",sep=""), width=7, height=5.25, units="in", res=300)#
	print(data_plot)#
	dev.off()#
	pdf(paste(filepath,filename,".pdf",sep=""), width=7, height=5.25)#
	print(data_plot)#
	dev.off()#
}#
#
# Calculate the stance phases for an individual.#
stance_versus_flight <- function(data_com,data_touch,low_time,upp_time,num_gaps) {#
	time_filtered_sub_com_data <- subset(data_com,Time > low_time & Time < upp_time)#
	time_filtered_touch_data <- subset(data_touch, Time > low_time & Time < upp_time)#
	# Find the stance phases of touching.#
	# 1) Get the unique times for touching. (Include starting and ending times.)#
	# 2) Find the largest X number of gaps (Dependent on each case and the time interval.)#
	# 3) Establish critical points to form the boxes.#
	# 4) Get the minimum num_gaps - 1 to form your boxes.#
	# 5) Get the x positions for the critical points.#
	# 1)#
	un_times <- sort(unique(time_filtered_touch_data$Time))#
	un_times <- c(low_time,un_times,upp_time)#
	un_times#
	# 2)#
	time_gaps <- diff(un_times)#
	time_gaps#
	ordered_gaps <- order(time_gaps,decreasing=TRUE) # Get the vector indices for the maximum gaps in time_gaps.  Largest are listed first.#
	# 3) Index of the gap is the index and the index + 1 in the timeline.#
	cp <- c()#
	for (i in 1:num_gaps) {#
		gap <- ordered_gaps[i]#
		cp <- c(cp,un_times[gap])#
		cp <- c(cp,un_times[gap+1])#
	}#
	cp <- sort(cp)#
	cp#
	# 4)#
	cp_gaps <- diff(cp)#
	ordered_gaps <- order(cp_gaps)#
	cps <- data.frame(time_low_bound=c(),time_upp_bound=c(),X_low_bound=c(),X_upp_bound=c())#
	for (i in 1:(num_gaps-1)) {#
		gap <- ordered_gaps[i]#
		cps <- rbind(cps,data.frame(time_low_bound=cp[gap],time_upp_bound=cp[gap+1],X_low_bound=c(0),X_upp_bound=c(0)))#
	}#
	cps#
	# 5)#
	for (i in 1:length(cps[,1])) {#
		subset(time_filtered_touch_data, Time == cps[i,1])#
		cps[i,3] <- min(subset(time_filtered_touch_data, Time == cps[i,1])$X)#
		cps[i,4] <- max(subset(time_filtered_touch_data, Time == cps[i,2])$X)#
	}#
	cps <- na.omit(cps)#
	return(cps)#
}#
#
# Smooth a signal.#
smoothing <- function(x) {#
	for (i in 4:length(x)-3) {#
		if (x[i] > 1.0) {#
			x[i] <- (x[i-3] + x[i-2] + x[i-1] + x[i+1] + x[i+2] + x[i+2])/6.0#
		}#
	}#
	return(x)#
}#
#
###########################################################################################
#
# Setup the basic file structure for reading data.#
#
# Test case for single use.#
base_path <- "/Users/moorejar/Desktop/"#
com_data_full_path <- paste(base_path,"Testing_MOI_Analysis_composite_com_data.dat",sep="")#
ang_mom_full_path <- paste(base_path,"Testing_MOI_Analysis_angular_mom_data.dat",sep="")#
#
# Production code for different experiments.#
base_path <- "/Volumes/Public/Publications/hopping_journal/Experiments/"#
exp_path <- c(#
	"straight_tail_hopper/", #1#
	"evo_straight_actuated_tail/", #2#
	"straight_angled_tail_hopper/", #3#
	"evo_angled_straight_actuated_tail/", #4#
	"evo_tail_fixed_mass_straight_actuated_tail_0_3_per_seg_mass/", #5#
	"evo_tail_fixed_mass_straight_actuated_tail_0_6_per_seg_mass/", #6#
	"evo_tail_fixed_mass_straight_actuated_tail_0_15_per_seg_mass/", #7#
	"evo_angled_curved_actuated_tail/", #8#
	"ankle_fix/evo_tail_fixed_mass_straight_actuated_tail_0_9_total_mass/",  #9#
	"ankle_fix/evo_tail_fixed_mass_straight_actuated_tail_0_6_total_mass/", #10#
	"ankle_fix/evo_tail_fixed_mass_straight_actuated_tail_0_3_total_mass/", #11#
	"ankle_fix/mass_runs/evo_tail_fixed_mass_straight_actuated_tail_0_9_total_mass/", #12#
	"ankle_fix/mass_runs/evo_tail_fixed_mass_straight_actuated_tail_0_6_total_mass/", #13#
	"ankle_fix/mass_runs/evo_tail_fixed_mass_straight_actuated_tail_0_3_total_mass/" #14#
		)#
sec_path <- "validator_logging/"#
#
ang_mom_file <- "ang_mom_data/DEAP_Hopper_RUN_Gen_GEN_Ind_0_angular_mom_data.dat"#
com_data_file <- "com_data/DEAP_Hopper_RUN_Gen_GEN_Ind_0_composite_com_data.dat"#
ref_point_file <- "ref_point_data/DEAP_Hopper_RUN_Gen_GEN_Ind_0_reference_point_data.dat"#
touch_file <- "contact_sensors/DEAP_Hopper_RUN_Gen_GEN_Ind_0__contacts.dat"#
touch_file <- "body_touching/DEAP_Hopper_RUN_Gen_GEN_Ind_0__body_touches.dat"#
#
exp_num <- 14#
run_num <- 13#
gen <- 1999#
#
# Construct the full paths for the data.#
ang_mom_full_path <- gsub("RUN",run_num,ang_mom_file)#
ang_mom_full_path <- gsub("GEN",gen,ang_mom_full_path)#
ang_mom_full_path <- paste(base_path,exp_path[exp_num],run_num,"/",sec_path,ang_mom_full_path,sep="")#
#
com_data_full_path <- gsub("RUN",run_num,com_data_file)#
com_data_full_path <- gsub("GEN",gen,com_data_full_path)#
com_data_full_path <- paste(base_path,exp_path[exp_num],run_num,"/",sec_path,com_data_full_path,sep="") #
#
ref_point_full_path <- gsub("RUN",run_num,ref_point_file)#
ref_point_full_path <- gsub("GEN",gen,ref_point_full_path)#
ref_point_full_path <- paste(base_path,exp_path[exp_num],run_num,"/",sec_path,ref_point_full_path,sep="") #
#
touch_full_path <- gsub("RUN",run_num,touch_file)#
touch_full_path <- gsub("GEN",gen,touch_full_path)#
touch_full_path <- paste(base_path,exp_path[exp_num],run_num,"/",sec_path,touch_full_path,sep="")#
#
###########################################################################################
#
# Read in the center of mass data.#
com_data <- read.csv(com_data_full_path,head=TRUE,sep=",")#
#com_data <- subset(com_data, Body != 'left_leg')#
summary(com_data)#
#
# Read in the Reference Point Data#
ref_point_data <- read.csv(ref_point_full_path,head=TRUE,sep=",")#
ref_point_data$Body <- as.factor("ref_point")#
ref_point_data$COM_X <- ref_point_data$Ref_Point_X#
ref_point_data$COM_Y <- ref_point_data$Ref_Point_Y#
drops <- c("Ref_Point_X","Ref_Point_Y","Ref_Point_Z")#
ref_point_data <- ref_point_data[,!(names(ref_point_data) %in% drops)]#
ref_point_data$Mass <- NA#
summary(ref_point_data)#
unique(ref_point_data$Time)#
#
# Read in the touch data.#
touch_data <- read.csv(touch_full_path,head=TRUE,sep=",")#
touch_data$Body_ID <- as.factor(touch_data$Body_ID)#
touch_data$Body <- as.factor("NA")#
touch_data$Touched <- 1 # Need to demarcate that a contact was made at this point.#
summary(touch_data)#
#
# Link the body numbers to the limbs.#
touch_data$Body <- as.factor(touch_data$Body_ID)#
levels(touch_data$Body)[levels(touch_data$Body)==0]   <- "Rear Segment"#
levels(touch_data$Body)[levels(touch_data$Body)==1]   <- "Mid Segment"#
levels(touch_data$Body)[levels(touch_data$Body)==2]   <- "Front Segment"#
levels(touch_data$Body)[levels(touch_data$Body)==3]   <- "Left Rear Upper"#
levels(touch_data$Body)[levels(touch_data$Body)==4]   <- "Right Rear Upper"#
levels(touch_data$Body)[levels(touch_data$Body)==5]   <- "Left Rear Mid"#
levels(touch_data$Body)[levels(touch_data$Body)==6]   <- "Right Rear Mid"#
levels(touch_data$Body)[levels(touch_data$Body)==7]   <- "Left Rear Low"#
levels(touch_data$Body)[levels(touch_data$Body)==8]   <- "Right Rear Low"#
levels(touch_data$Body)[levels(touch_data$Body)==9]   <- "Left Rear Foot"#
levels(touch_data$Body)[levels(touch_data$Body)==10]  <- "Right Rear Foot"#
levels(touch_data$Body)[levels(touch_data$Body)==11]  <- "Left Front Upper"#
levels(touch_data$Body)[levels(touch_data$Body)==12]  <- "Right Front Upper"#
levels(touch_data$Body)[levels(touch_data$Body)==13]  <- "Left Front Foot"#
levels(touch_data$Body)[levels(touch_data$Body)==14]  <- "Right Front Foot"#
levels(touch_data$Body)[levels(touch_data$Body)==15]  <- "Tail Front"#
levels(touch_data$Body)[levels(touch_data$Body)==16]  <- "Tail Mid"#
levels(touch_data$Body)[levels(touch_data$Body)==17]  <- "Tail Rear"#
levels(touch_data$Body)[levels(touch_data$Body)==18]  <- "Head"#
summary(touch_data)#
#
# Read in the angular momentum data.#
ang_mom_data <- read.csv(ang_mom_full_path,head=TRUE,sep=",")#
#ang_mom_data <- subset(ang_mom_data, Body != 'left_leg')#
summary(ang_mom_data)#
#
###########################################################################################
#
unified_data <- rbind(com_data,ref_point_data)#
summary(unified_data)#
#
mod_val <- 0.1#
#
tail_com_data  <- subset(unified_data, Body == 'tail'      & (Time %% mod_val <= abs(0.001) | Time %% mod_val >= abs(mod_val-0.01)))#
leg_com_data   <- subset(unified_data, Body == 'both_rear_legs' & (Time %% mod_val <= abs(0.001) | Time %% mod_val >= abs(mod_val-0.01)))#
torso_com_data <- subset(unified_data, Body == 'torso'     & (Time %% mod_val <= abs(0.001) | Time %% mod_val >= abs(mod_val-0.01)))#
ref_point_data <- subset(unified_data, Body == 'ref_point' & (Time %% mod_val <= abs(0.001) | Time %% mod_val >= abs(mod_val-0.01)))#
#
sub_com_data <- rbind(tail_com_data,leg_com_data)#
sub_com_data <- rbind(sub_com_data,torso_com_data)#
sub_com_data <- rbind(sub_com_data,ref_point_data)#
summary(sub_com_data)
plt <- ggplot(unified_data, aes(x=Time,y=COM_Y)) +#
	labs(title="Center of Mass Over Time",x="Time",y="COM Height") +#
	theme(legend.position="bottom") +#
	xlim(min=0,max=10) +#
	ylim(min=0,max=2) +#
	geom_line(data=torso_com_data,aes(x=Time,y=COM_Y,color="Torso"),alpha=0.3,size=1,linetype=2) +#
	geom_line(data=leg_com_data,aes(x=Time,y=COM_Y,color="Leg"),alpha=0.3,size=1,linetype=2) +#
	geom_line(data=tail_com_data,aes(x=Time,y=COM_Y,color="Tail"),alpha=0.3,size=1,linetype=2) +	#
	geom_line(data=ref_point_data,aes(x=Time,y=COM_Y,color="Ref Point"),alpha=1.0,size=1.5) +	#
	scale_color_manual(name="Points",values=c(cbPalette[6],cbPalette[1],cbPalette[7],cbPalette[8]),breaks=c("Ref Point","Torso","Leg","Tail"))#
plt
low_time_bound <- 4#
upp_time_bound <- 6#
#
sub_time_filtered_data <- subset(sub_com_data, Time < upp_time_bound & Time > low_time_bound)#
summary(sub_time_filtered_data)#
#
plt <- ggplot() +#
	labs(title="Center of Mass Movement",x="X Position",y="Y Position") +#
	theme(legend.position="bottom") +#
#	xlim(min=-4,max=90) +#
	ylim(min=0,max=2) +#
	#geom_rect(data=cps,aes(xmin=X_low_bound,ymin=0,xmax=X_upp_bound,ymax=4),color="black",alpha=0.4,group=NA)  +#
	geom_line(data=subset(sub_time_filtered_data, Body != 'tail' & Body != 'torso' & Time > low_time_bound & Time < upp_time_bound),aes(x=COM_X,y=COM_Y,group=Time),color="black") +#
	geom_line(data=subset(sub_time_filtered_data, Body != 'both_rear_legs' & Body != 'tail' & Time > low_time_bound & Time < upp_time_bound),aes(x=COM_X,y=COM_Y,group=Time),color="black") +	#
	geom_line(data=subset(sub_time_filtered_data, Body != 'both_rear_legs' & Body != 'torso' & Time > low_time_bound & Time < upp_time_bound),aes(x=COM_X,y=COM_Y,group=Time),color="black") +	#
	geom_point(data=sub_time_filtered_data,aes(x=COM_X,y=COM_Y,group=Body,shape=Body,fill=Body),color="black",size=3) +#
	geom_point(data=time_filtered_td, aes(x=X,y=0),color="black")  +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24))# +#
#	coord_fixed()#
plt
touch_data$Mod_Touched <- touch_data$Touched - 0.1 + 0.01 * as.integer(touch_data$Body_ID)#
plt <- ggplot(touch_data, aes(x=Time, y=Mod_Touched, color=Body)) +#
	geom_point(aes(shape=Body),size=4) +#
	scale_shape_manual(values=c(0,1,2,16,17,18,19,20))#
plt
low_time_bound <- 4.0#
upp_time_bound <- 6.0#
cps <- stance_versus_flight(subset(sub_com_data,Time > low_time_bound & Time < upp_time_bound),subset(touch_data, Time > low_time_bound & Time < upp_time_bound),low_time_bound,upp_time_bound,10)#
cps#
#
time_filtered_sub_com_data <- sub_time_filtered_data#
time_filtered_touch_data <- subset(touch_data, Time < upp_time_bound & Time > low_time_bound)#
time_filtered_d <- subset(time_filtered_sub_com_data, Time > low_time_bound & Time < upp_time_bound)#
time_filtered_td <- subset(time_filtered_touch_data, Time > low_time_bound & Time < upp_time_bound)#
#
#plt <- ggplot(time_filtered_sub_com_data, aes(x=COM_X,group=Body,color=Body,y=COM_Y)) +#
plt <- ggplot() +#
	labs(title="Center of Mass Movement",x="X Position",y="Y Position") +#
	theme(legend.position="bottom") +#
#	xlim(min=-2,max=60) +#
#	ylim(min=0,max=4) +#
	#geom_rect(data=cps,aes(xmin=X_low_bound,ymin=0,xmax=X_upp_bound,ymax=4),color="black",alpha=0.4,group=NA)  +#
	geom_line(data=subset(sub_time_filtered_data, Body != 'tail' & Body != 'torso'),aes(group=Time,x=COM_X,y=COM_Y),color="black") +#
	geom_line(data=subset(sub_time_filtered_data, Body != 'both_rear_legs' & Body != 'tail'),aes(group=Time,x=COM_X,y=COM_Y),color="black") +	#
	geom_line(data=subset(sub_time_filtered_data, Body != 'both_rear_legs' & Body != 'torso'),aes(group=Time,x=COM_X,y=COM_Y),color="black") +	#
	geom_point(data=sub_time_filtered_data, aes(x=COM_X,group=Body,color=Body,y=COM_Y,shape=Body,fill=Body),color="black",size=3) +#
	geom_point(data=time_filtered_td, aes(x=X,y=0),color="black")  +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24))# +#
#	coord_fixed()#
plt
aggregate_data <- subset(ang_mom_data,Body == 'both_rear_legs')$Ang_Mom + subset(ang_mom_data,Body == 'tail')$Ang_Mom + subset(ang_mom_data,Body == 'torso')$Ang_Mom#
summary(aggregate_data)#
#
derived_ang_mom_data <- data.frame(time=unique(ang_mom_data$Time), aggregate=aggregate_data)#
summary(derived_ang_mom_data)#
#
library(pspline)#
qplot(derived_ang_mom_data$time,predict(sm.spline(derived_ang_mom_data$time, subset(ang_mom_data,Body == 'both_rear_legs')$Ang_Mom), derived_ang_mom_data$time, 1))#
#
plt <- ggplot(derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	geom_line() +#
	geom_point(data=touch_data, aes(x=Time,y=0),color="black")  +#
	ylim(min=-5,max=5)#
plt#
#
# Get the flight/stance phases for the entire simulation.#
full_cps <- stance_versus_flight(com_data,touch_data,0.0,10.0,20)#
# Replace any infinite values with 0 (occurs for start.)#
full_cps <- do.call(data.frame,lapply(full_cps, function(x) replace(x, is.infinite(x),0.0)))#
full_cps#
#
# Plot the angular momentum data with touch information included.#
plt <- ggplot() +#
	labs(title="Sum Angular Momentum",x="Time",y="Angular Momentum") +#
	#geom_line(derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	geom_point(data=touch_data, aes(x=Time,y=0),color="black")  +#
	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_line(data=derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	ylim(min=-5.0,max=5.0)#
plt
summary(ang_mom_data)#
ang_mom_data$norm_ang_mom <- ifelse(ang_mom_data$Body == "torso" | ang_mom_data$Body == "tail",ang_mom_data$Ang_Mom/10.0,ang_mom_data$Ang_Mom)#
#
# Apply smoothing.#
ang_mom_data$smoothed_norm_ang_mom <- smoothing(ang_mom_data$norm_ang_mom)#
#
body_names <- list(#
  'both_rear_legs'="Rear Legs",#
  'tail'="Tail",#
  'torso'="Torso"#
)#
#
body_labeller <- function(variable,value){#
  return(body_names[value])#
}#
#
body_labeller(ang_mom_data$Body,"tail")#
body_labeller(ang_mom_data$Body,"torso")#
#
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
	#geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-0.025,xmax=time_upp_bound,ymax=0.025),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-0.025,xmax=time_upp_bound,ymax=0.025),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Sum Angular Momentum",x="Time",y="Angular Momentum") +#
	#geom_line(derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	geom_point(data=touch_data, aes(x=Time,y=0),color="black")  +#
	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_line(data=derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	ylim(min=-5.0,max=5.0)#
plt
plt <- ggplot() +#
	labs(title="Sum Angular Momentum",x="Time",y="Angular Momentum") +#
	#geom_line(derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	geom_point(data=touch_data, aes(x=Time,y=0),color="black")  +#
	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_line(data=derived_ang_mom_data, aes(x=time,y=aggregate)) +#
	ylim(min=-5.0,max=5.0) +#
	xlim(min=4.0,max=6.0)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(aes(xmin=4.2,ymin=-1.0,xmax=4.3,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(aes(xmin=4.7,ymin=-1.0,xmax=4.8,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(aes(xmin=5.2,ymin=-1.0,xmax=5.3,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(aes(xmin=5.7,ymin=-1.0,xmax=5.8,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.2,ymin=-1.0,xmax=4.3,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.8,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.2,ymin=-1.0,xmax=5.3,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.8,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.18,ymin=-1.0,xmax=4.28,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.8,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.2,ymin=-1.0,xmax=5.3,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.8,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.18,ymin=-1.0,xmax=4.28,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.8,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.18,ymin=-1.0,xmax=5.28,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.8,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.18,ymin=-1.0,xmax=4.28,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.8,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.16,ymin=-1.0,xmax=5.26,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.8,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="bottom") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.18,ymin=-1.0,xmax=4.33,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.85,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.16,ymin=-1.0,xmax=5.31,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.85,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
plt <- ggplot() +#
	labs(title="Angular Momentum Over Time",x="Time",y="Angular Momentum") +#
	theme(legend.position="none") +#
	ylim(min=-1.2,max=1.2) +#
	xlim(min=4.0,max=6.0) +#
#	geom_rect(data=full_cps,aes(xmin=time_low_bound,ymin=-1.0,xmax=time_upp_bound,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.18,ymin=-1.0,xmax=4.33,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=4.7,ymin=-1.0,xmax=4.85,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.16,ymin=-1.0,xmax=5.31,ymax=1.0),color="black",alpha=0.4) +#
	geom_rect(data=full_cps,aes(xmin=5.7,ymin=-1.0,xmax=5.85,ymax=1.0),color="black",alpha=0.4) +	#
	geom_point(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=smoothed_norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=1.0) +#
	#geom_line(data=subset(ang_mom_data,Body == 'both_rear_legs' | Body == 'torso' | Body == 'tail'), aes(x=Time,y=norm_ang_mom,group=Body,shape=Body,fill=Body),color="black",size=3,alpha=0.4) +#
	scale_fill_manual(values=c(cbPalette[6],cbPalette[5],cbPalette[7],cbPalette[8])) +#
	scale_shape_manual(values=c(21,22,23,24)) +#
	facet_grid(Body ~ .)#, labeller = body_labeller)#
plt
save_plot(base_path,"ang_mom_over_time",plt)
library(plyr)#
#
# Constants for writing out data.#
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_evo_tail_analysis/"#
#
base_path <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/"#
#
exp_num <- 2#
experiments <- c("evo_tail_evo_mass_straight_actuated_tail_4000_gens",#
	"evo_tail_evo_mass_straight_actuated_tail_low_lim_0_15")#
exp_name <- c("Evo Len/Mass",#
	"Evo Len/Mass Low Lim 0.015")#
#
all_data <- data.frame()#
#
for (i in 1:2) {#
	# Read in the data from the file.#
	fit_data <- read.csv(paste(base_path,experiments[i],"/best_individuals_fit_data.dat",sep=""),header=TRUE,sep=",")#
	behavior_data <- read.csv(paste(base_path,"experiment_overview_best_individuals_evo_mass_evo_length.csv",sep=""),header=TRUE,sep=",")#
	behavior_data <- subset(behavior_data, Exp == exp_name[i])#
	tmp_data <- merge(fit_data, behavior_data)#
	all_data <- rbind(all_data, tmp_data)#
}#
#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- (all_data$TS1_Len * 3)/1.373#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$TBM_Tail_Mass <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Tail_Mass_Dist <- ((all_data$TS3_Mass/all_data$Tail_Mass)*1.0 + (all_data$TS2_Mass/all_data$Tail_Mass)*2.0 + (all_data$TS1_Mass/all_data$Tail_Mass)*3.0)/3.0#
avg_tail_mass <- all_data$Tail_Mass/3.0#
all_data$Tail_Var <- ((all_data$TS1_Mass - avg_tail_mass)**2 + (all_data$TS2_Mass - avg_tail_mass)**2 + (all_data$TS3_Mass - avg_tail_mass)**2)/3#
abs(all_data$TS1_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS2_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS3_Mass - (all_data$Tail_Mass/3.0))#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
# Fix treatment names for plotting.#
all_data$Exp <- revalue(all_data$Exp, c("Evo Len/Mass"="ELM-3%", "Evo Len/Mass Low Lim 0.015"="ELM-13.3%"))
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=TBM_Tail_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=0.25) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=TBM_Tail_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Exp)) +#
	labs(title="Tail Mass versus Performance",x="Tail Mass as % of Total Body Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=0.2) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt#
#
save_plot(write_dest,"tbm_tail_mass_vs_dist_traveled",plt)
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Total_Mass,y=Dist_Traveled,shape=Exp,color=Behavior)) +#
	labs(title="Torso Mass versus Performance",x="Torso Mass",y="Distance Traveled") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
#	ylim(min=0, max=0.25) +#
	xlim(min=0, max=5) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]))#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
library(plyr)#
source("~/.Rprofile")#
#
# Constants for writing out data.#
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_analysis/"#
#
# Read in the data from the file.#
all_data <- read.csv("/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/all_best_individuals_unified_data.dat",header=TRUE,sep=",")#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- all_data$TS1_Len * 3.0#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$Torso_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass#
all_data$Mass_Ratio <- all_data$Tail_Mass/all_data$Total_Mass#
all_data$Tail_Mass_TBM <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
#
# Rescale the Mass_Dist to 0 - 1.  Possible values initially are 0.33-1.0#
newrange <- function(x){(x-0.25)/(1.0-0.25)}#
min(all_data$Mass_Dist)#
max(all_data$Mass_Dist)#
all_data$Scaled_Mass_Dist <- newrange(all_data$Mass_Dist)#
min(all_data$Scaled_Mass_Dist)#
max(all_data$Scaled_Mass_Dist)#
#
# Change the order of experiment factor levels.#
all_data$Exp <- factor(all_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","9.25% TBMC","16.93% TBM","16.93% TBMC","23.41% TBM","23.41% TBMC","37.94% TBM"))#
all_data$Exp_Labels <- revalue(all_data$Experiment, c("0.075 Mass"="FM-2.5%","0.15 Mass"="FM-4.9%","0.3 Mass"="FM-9.3%",#
	"0.3 Mass Curved"="FM-0.3C","0.6 Mass"="FM-17%","0.6 Mass Curved"="FM-0.6C","0.9 Mass"="FM-23.5%","0.9 Mass Curved"="FM-0.9C","1.8 Mass"="FM-38.1%"))#
all_data <- subset(all_data, Exp %in% c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
bipedal_hopper_data$Exp <- factor(bipedal_hopper_data$Exp, levels = c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM","9.25% TBMC","16.93% TBMC","23.41% TBMC"))#
#
levels(all_data$Exp)#
#
# Rename experiments from TBM to Mass#
legend_limits=c("0.075 Mass","0.15 Mass","0.3 Mass","0.6 Mass","0.9 Mass","1.8 Mass")#
legend_labels=c("FM-0.075","FM-0.15","FM-0.3","FM-0.6","FM-0.9","FM-1.8")#
legend_labels_2=c("FM-2.5%","FM-4.9%","FM-9.3%","FM-17%","FM-23.5%","FM-38.1%")
plt <- ggplot(subset(all_data,Behavior == "Bounding" | Behavior == "Bipedal Hopping"),aes(x=Total_Mass,y=Dist_Traveled,color=Behavior,fill=Behavior,shape=Experiment)) +#
	labs(title="Torso Mass versus Performance",x="Torso Mass",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=70) +#
	xlim(min=0, max=4.0) +#
		geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_shape_discrete(limits=legend_limits,labels=legend_labels_2,name="Treatment (Symbol)")#+#
#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt
save_plot(write_dest,"torso_mass_vs_dist_traveled",plt)
library(plyr)#
#
# Constants for writing out data.#
write_dest <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/best_individual_evo_tail_analysis/"#
#
base_path <- "/Volumes/Public/Publications/hopping_journal/Experiments/ankle_fix/mass_runs/"#
#
exp_num <- 2#
experiments <- c("evo_tail_evo_mass_straight_actuated_tail_4000_gens",#
	"evo_tail_evo_mass_straight_actuated_tail_low_lim_0_15")#
exp_name <- c("Evo Len/Mass",#
	"Evo Len/Mass Low Lim 0.015")#
#
all_data <- data.frame()#
#
for (i in 1:2) {#
	# Read in the data from the file.#
	fit_data <- read.csv(paste(base_path,experiments[i],"/best_individuals_fit_data.dat",sep=""),header=TRUE,sep=",")#
	behavior_data <- read.csv(paste(base_path,"experiment_overview_best_individuals_evo_mass_evo_length.csv",sep=""),header=TRUE,sep=",")#
	behavior_data <- subset(behavior_data, Exp == exp_name[i])#
	tmp_data <- merge(fit_data, behavior_data)#
	all_data <- rbind(all_data, tmp_data)#
}#
#
all_data$Behavior <- as.factor(all_data$Behavior)#
all_data$Exp <- as.factor(all_data$Exp)#
all_data$Tail_Len <- (all_data$TS1_Len * 3)/1.373#
all_data$Tail_Mass <- all_data$TS1_Mass + all_data$TS2_Mass + all_data$TS3_Mass#
all_data$Total_Mass <- all_data$Rear_Torso_Mass + all_data$Mid_Torso_Mass + all_data$Front_Torso_Mass + 0.5 # Head mass = 0.5#
all_data$TBM_Tail_Mass <- all_data$Tail_Mass/(all_data$Tail_Mass + all_data$Total_Mass + 0.6028) # Remaining mass in legs is .6028#
all_data$Tail_Mass_Dist <- ((all_data$TS3_Mass/all_data$Tail_Mass)*1.0 + (all_data$TS2_Mass/all_data$Tail_Mass)*2.0 + (all_data$TS1_Mass/all_data$Tail_Mass)*3.0)/3.0#
avg_tail_mass <- all_data$Tail_Mass/3.0#
all_data$Tail_Var <- ((all_data$TS1_Mass - avg_tail_mass)**2 + (all_data$TS2_Mass - avg_tail_mass)**2 + (all_data$TS3_Mass - avg_tail_mass)**2)/3#
abs(all_data$TS1_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS2_Mass - (all_data$Tail_Mass/3.0)) + abs(all_data$TS3_Mass - (all_data$Tail_Mass/3.0))#
all_data$Mass_Dist <- (all_data$Rear_Torso_Mass/all_data$Total_Mass*1.0 + all_data$Mid_Torso_Mass/all_data$Total_Mass*2.0 + all_data$Front_Torso_Mass/all_data$Total_Mass*3.0 + 0.5/all_data$Total_Mass*4.0)/4.0#
all_data$Tail_Offset <- all_data$T_Off + all_data$TB_Off#
all_data$Rear_Hip_Offset <- all_data$RH_Off + (all_data$RRL_Off+all_data$LRL_Off)/2.0#
all_data$Phase_Diff_Hips_vs_Tail <- all_data$Rear_Hip_Offset - all_data$Tail_Offset#
all_data$Dist_Traveled <- all_data$Dist_Traveled/1.373#
summary(all_data)#
# Calculate the mean of the tail length for all data.#
mean_tail_len<-ddply(all_data, .(Exp), summarize, mean=mean(Tail_Len))#
mean_tail_len#
#
# Calculate the mean of the oscillation frequency for all data.#
mean_osc_freq<-ddply(all_data, .(Exp), summarize, mean=mean(Osc_Freq))#
mean_osc_freq#
#
# Calculate the mean of the tail length for all data.#
mean_dist_traveled<-ddply(all_data, .(Exp), summarize, mean=mean(Dist_Traveled))#
mean_dist_traveled#
#
# Subset the data to get bipedal hopper only results.#
bipedal_hopper_data <- subset(all_data, Behavior == "Bipedal Hopping")#
summary(bipedal_hopper_data)#
#
# Fix treatment names for plotting.#
all_data$Exp <- revalue(all_data$Exp, c("Evo Len/Mass"="ELM-3%", "Evo Len/Mass Low Lim 0.015"="ELM-13.3%"))
plt <- ggplot(subset(all_data, Behavior == "Bipedal Hopping" | Behavior == "Bounding"),aes(x=Tail_Len,y=Dist_Traveled,shape=Exp,color=Behavior,fill=Behavior)) +#
	labs(title="Tail Length versus Performance",x="Tail Length (Body Lengths)",y="Distance Traveled (Body Lengths)") +#
	theme(axis.text.x = element_text(angle = 45, hjust = 1)) +#
	theme(legend.key=element_rect(color=NA)) +#
	guides(fill = guide_legend(override.aes = list(shape = 22, size=6))) +#
	ylim(min=0, max=75) +#
	xlim(min=0, max=2) +	#
	geom_point(size=3) +#
	scale_color_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#
	scale_fill_manual(values=c(cbPalette[4],cbPalette[2]),name="Behavior (Color)") +#+#
	scale_shape_discrete(name="Treatment (Symbol)")#
	#	scale_x_discrete(limits=c("2.48% TBM","4.85% TBM","9.25% TBM","16.93% TBM","23.41% TBM","37.94% TBM"))#
plt#
#
save_plot(write_dest,"tail_len_vs_dist_traveled",plt)
max(all_data$Dist_Traveled)
